// Copyright (c) 2005-2009 Jaroslav Gresula
//
// Distributed under the MIT license (See accompanying file
// LICENSE.txt or copy at http://jagpdf.org/LICENSE.txt)
//

// this file was generated by msggen.py
#ifndef JAG_1d33e701cd9ce6198e83ac11fc81b0a4
#define JAG_1d33e701cd9ce6198e83ac11fc81b0a4

#include <core/errlib/except.h>
#include <boost/format/format_fwd.hpp>
#include <boost/shared_ptr.hpp>

namespace jag
{


struct msg_icu_failed
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_icu_failed( int p1, char const* p2 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_config_integer_value
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_config_integer_value( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_config_unknown_option
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_config_unknown_option( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_config_parse_error
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_config_parse_error(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_config_unknown_value
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_config_unknown_value( char const* p1, char const* p2 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_opt_parser_syntax_err
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_opt_parser_syntax_err( int p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_opt_parser_value_err
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_opt_parser_value_err( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_opt_not_specified
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_opt_not_specified(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_opt_length_differs
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_opt_length_differs(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_opt_parser_invalid_token
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_opt_parser_invalid_token( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};



} // namespace jag
/** EOF @file */
#endif // JAG_1d33e701cd9ce6198e83ac11fc81b0a4
