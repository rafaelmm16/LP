// Copyright (c) 2005-2009 Jaroslav Gresula
//
// Distributed under the MIT license (See accompanying file
// LICENSE.txt or copy at http://jagpdf.org/LICENSE.txt)
//

// this file was generated by msggen.py
#ifndef JAG_9274728d4a08686d950f04087c43f2d3
#define JAG_9274728d4a08686d950f04087c43f2d3

#include <core/errlib/except.h>
#include <boost/format/format_fwd.hpp>
#include <boost/shared_ptr.hpp>

namespace jag
{


struct msg_not_png_format
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_not_png_format(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_unsupported_image_format
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_unsupported_image_format(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_error_while_processing_png_format
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_error_while_processing_png_format( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_error_unsupported_color_type_in_png
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_error_unsupported_color_type_in_png( int p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_png_interlacing_other_than_adam7_not_supported
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_png_interlacing_other_than_adam7_not_supported(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_png_empty_palette
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_png_empty_palette(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_mask_dimension_not_defined
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_mask_dimension_not_defined(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_mask_bpc_not_defined
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_mask_bpc_not_defined(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_mask_data_not_specified
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_mask_data_not_specified(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_data_not_specified
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_data_not_specified(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_dimension_not_defined
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_dimension_not_defined(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_image_bpc_not_defined
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_image_bpc_not_defined(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_typeface_data_not_specified
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_typeface_data_not_specified(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_unknown_font_format
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_unknown_font_format(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_table_not_found
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_table_not_found( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_freetype_failed
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_freetype_failed( int p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_required_table_missing
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_required_table_missing(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_invalid_magic_number
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_invalid_magic_number(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_file_checksum_failed
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_file_checksum_failed(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_zero_table_size
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_zero_table_size(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_wrong_table_size
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_wrong_table_size(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_cannot_read_table
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_cannot_read_table(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_table_checksum_failed
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_table_checksum_failed(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_cannot_read
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_cannot_read(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_no_postscript_name
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_no_postscript_name(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_psname_invalid_chars
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_psname_invalid_chars(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_inconsistent_loca
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_inconsistent_loca(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_tt_name_table_invalid_fmt
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_tt_name_table_invalid_fmt(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_invalid_font_spec_str
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_invalid_font_spec_str(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_cannot_find_font
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_cannot_find_font( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_default_typeface_not_found
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_default_typeface_not_found(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_font_file_not_found
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_font_file_not_found(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_font_size_not_set
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_font_size_not_set(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_face_or_name_must_be_set
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_face_or_name_must_be_set(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_face_or_name
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_face_or_name(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_unrecognized_char_enc
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_unrecognized_char_enc( char const* p1 );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_enc_not_supported_by_sys_font_mapper
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_enc_not_supported_by_sys_font_mapper(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_font_family_not_present
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_font_family_not_present(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_invalid_cs_spec
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_invalid_cs_spec(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_not_jpeg_format
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_not_jpeg_format(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_corrupted_jpeg
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_corrupted_jpeg(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_no_color_space_spec
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_no_color_space_spec(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_pattern_cs_used_for_image
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_pattern_cs_used_for_image(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_invalid_fn_spec
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_invalid_fn_spec(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_core_font_with_unicode_enc
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_core_font_with_unicode_enc(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_failed_to_load_png
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_failed_to_load_png(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_unknown_image_type
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_unknown_image_type(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};


struct msg_enc_no_specified_sys_font_mapper
{
    boost::shared_ptr<boost::format> m_fmt;
public:
    msg_enc_no_specified_sys_font_mapper(  );
    operator msg_info_t() const;
    static unsigned msg_id();
};



} // namespace jag
/** EOF @file */
#endif // JAG_9274728d4a08686d950f04087c43f2d3
