// -*- mode: c++ -*-
// Copyright (c) 2005-2009 Jaroslav Gresula
//
// Distributed under the MIT license (See accompanying file
// LICENSE.txt or copy at http://jagpdf.org/LICENSE.txt)

#ifndef T1STANDARD_FONTS_JAG
#define T1STANDARD_FONTS_JAG

#include <interfaces/stdtypes.h>
#include <resources/interfaces/typeface.h>

// this file was generated by afm_parser.py

namespace jag {
namespace resources {

struct t1s_glyph {
    jag::Int unicode;
    jag::Int code;
    jag::Int widthx;
};

struct kern_offsets_t;

struct t1s_face {
    const TypefaceMetrics FontMetrics;
    jag::Char const* FontName;
    jag::Char const* FullName;
    jag::Char const* FamilyName;
    jag::Char const* EncodingScheme;
    bool const IsBuiltinEncoding;
    jag::Char const* CharacterSet;
    const jag::Int UnderlinePosition;
    const jag::Int UnderlineThickness;
    const jag::Double ItalicAngle;
    const bool       IsFixedPitch;
    const jag::Int Weight;
    const jag::Int StdHW;
    const jag::Int StdVW;
    const int num_glyphs;
    const t1s_glyph* const glyphs;
    jag::Int (*get_kerning)(kern_offsets_t const&);
    Hash16  Hash;
};

enum T1_ADOBE_STANDARD_FONTS{
    $ENUMS,
    T1_NUM_FACES
};
extern t1s_face const* g_adobe_standard_t1_faces[T1_NUM_FACES];

Int t1_get_kerning(t1s_face const& face, Int left, Int right);

}} //namespace jag::resources

#endif
/** EOF @file */
